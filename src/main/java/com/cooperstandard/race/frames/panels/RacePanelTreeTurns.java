/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cooperstandard.race.frames.panels;

import com.cooperstandard.race.config.CooperstandardContext;
import com.cooperstandard.race.config.SpringContext;
import com.cooperstandard.race.models.Kpi;
import com.cooperstandard.race.models.Turno;
import com.cooperstandard.race.ui.IconThumbSliderUI;
import com.cooperstandard.race.util.ImageUtil;

import javax.swing.*;
import java.awt.*;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Map;

/**
 * @author Tiago
 */
public class RacePanelTreeTurns extends javax.swing.JPanel {

    private static final long serialVersionUID = -5407934704880959443L;
    private Map<String, Object[]> tracks = new HashMap();

    /**
     * Creates new form RacePanel
     */
    public RacePanelTreeTurns(int meta, Kpi kpi) {
        initComponents();
        racePanel.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        if (kpi != null) {
            CooperstandardContext cooperstandardContext = SpringContext.getContext().getBean(CooperstandardContext.class);
            this.setName(kpi.getNome());
            lbKpi.setText(kpi.getNome());
            lbLargada.setIcon(ImageUtil.getImageIconFromUserPath(cooperstandardContext.getImagePath().concat(cooperstandardContext.getCheckeredFlag())));
            lbChegada.setIcon(ImageUtil.getImageIconFromUserPath(cooperstandardContext.getImagePath().concat(cooperstandardContext.getCheckeredFlag())));
            kpi.getTurnos().stream().sorted(Comparator.comparing(Turno::getNome)).forEach(turno -> {
                JSlider jslider = new JSlider();
                jslider.setName(turno.getNome());
                jslider.setMajorTickSpacing(10);
                jslider.setValue(0);
                jslider.setMaximum(meta);
                jslider.setPaintTrack(false);
                jslider.setOpaque(false);
                jslider.setEnabled(false);
                racePanel.add(jslider);
                addCinderTrack(jslider, cooperstandardContext.getImagePath().concat("cars/".concat(turno.getCarro())));
                tracks.put(turno.getNome(), new Object[]{jslider, turno.getTotalPontuacao()});
            });
        }
    }

    public void startRace() {
        tracks.entrySet().forEach(entry -> {
            new Thread(() -> {
                try {
                    Long value = (Long) entry.getValue()[1];
                    int v = 0;
                    while (v <= value) {
                        ((JSlider) entry.getValue()[0]).setValue(v);
                        Thread.sleep(50L);
                        v += 2;
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }).start();
        });
    }

    public void setActualValue(Kpi kpi) {
        new Thread(() -> {
            try {
                tracks.entrySet().stream().forEach(entry -> {
                    new Thread(() -> {
                        try {
                            Long v = (Long) entry.getValue()[1];
                            Long value = kpi.getTurnos().stream().filter(t -> t.getNome().equalsIgnoreCase(entry.getKey())).findFirst().get().getTotalPontuacao();
                            while (v <= value) {
                                ((JSlider) entry.getValue()[0]).setValue(v.intValue());
                                Thread.sleep(50L);
                                v += 2;
                            }
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }).start();
                });
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }).start();
    }

    public void addCinderTrack(JSlider jslider, String imagePath) {
        ImageIcon imageIcon = ImageUtil.getImageIconFromUserPath(imagePath);
        IconThumbSliderUI iconThumbSliderUI = new IconThumbSliderUI(jslider, imageIcon, imageIcon);
        jslider.setUI(iconThumbSliderUI);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbCabecalho = new javax.swing.JPanel();
        lbKpi = new javax.swing.JLabel();
        lbTurnoA = new javax.swing.JLabel();
        lbTurnoB = new javax.swing.JLabel();
        lbTurnoC = new javax.swing.JLabel();
        layredPanel = new javax.swing.JLayeredPane();
        lbLargada = new javax.swing.JLabel();
        lbChegada = new javax.swing.JLabel();
        racePanel = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(380, 62));

        lbCabecalho.setPreferredSize(new java.awt.Dimension(173, 61));

        lbKpi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbKpi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbKpi.setText("KPI");
        lbKpi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbTurnoA.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        lbTurnoA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTurnoA.setText("A");
        lbTurnoA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbTurnoA.setOpaque(true);

        lbTurnoB.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        lbTurnoB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTurnoB.setText("B");
        lbTurnoB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbTurnoB.setOpaque(true);

        lbTurnoC.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        lbTurnoC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTurnoC.setText("C");
        lbTurnoC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbTurnoC.setOpaque(true);

        javax.swing.GroupLayout lbCabecalhoLayout = new javax.swing.GroupLayout(lbCabecalho);
        lbCabecalho.setLayout(lbCabecalhoLayout);
        lbCabecalhoLayout.setHorizontalGroup(
                lbCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(lbCabecalhoLayout.createSequentialGroup()
                                .addComponent(lbKpi, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addGroup(lbCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbTurnoB, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbTurnoC, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbTurnoA, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, 0))
        );
        lbCabecalhoLayout.setVerticalGroup(
                lbCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbKpi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(lbCabecalhoLayout.createSequentialGroup()
                                .addComponent(lbTurnoA, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(lbTurnoB, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(lbTurnoC, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        racePanel.setOpaque(false);
        racePanel.setLayout(new javax.swing.BoxLayout(racePanel, javax.swing.BoxLayout.PAGE_AXIS));

        layredPanel.setLayer(lbLargada, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layredPanel.setLayer(lbChegada, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layredPanel.setLayer(racePanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layredPanelLayout = new javax.swing.GroupLayout(layredPanel);
        layredPanel.setLayout(layredPanelLayout);
        layredPanelLayout.setHorizontalGroup(
                layredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layredPanelLayout.createSequentialGroup()
                                .addComponent(lbLargada, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                                .addComponent(lbChegada, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(racePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))
        );
        layredPanelLayout.setVerticalGroup(
                layredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layredPanelLayout.createSequentialGroup()
                                .addGroup(layredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lbChegada, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbLargada, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layredPanelLayout.createSequentialGroup()
                                        .addComponent(racePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                        .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(lbCabecalho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(layredPanel))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lbCabecalho, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                                        .addComponent(layredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane layredPanel;
    private javax.swing.JPanel lbCabecalho;
    private javax.swing.JLabel lbChegada;
    private javax.swing.JLabel lbKpi;
    private javax.swing.JLabel lbLargada;
    private javax.swing.JLabel lbTurnoA;
    private javax.swing.JLabel lbTurnoB;
    private javax.swing.JLabel lbTurnoC;
    private javax.swing.JPanel racePanel;
    // End of variables declaration//GEN-END:variables
}
